#BlueJ class context
comment0.target=Family
comment0.text=\n\ A\ collection\ of\ family\ member,represents\ the\ whole\ family\ tree\n\n\ @Destiny\ Zhu,\ Melory\ So,\ Coco\ Kneer\n\ @05/13/2018\n
comment1.params=
comment1.target=Family()
comment1.text=\n\ Constructor\ that\ creates\ an\ empty\ family\ object\n
comment10.params=current\ dad
comment10.target=boolean\ isFather(FamilyMember,\ FamilyMember)
comment10.text=\n\ Returns\ true\ if\ second\ family\ member\ input\ is\ the\ father\ of\ \n\ first\ family\ member\ input\n\ \n\ param\ FamilyMember\ current,\ FamilyMember\ dad\n\ return\ true\ if\ dad\ is\ the\ father\ of\ current\n
comment11.params=current\ spouse
comment11.target=boolean\ isSpouse(FamilyMember,\ FamilyMember)
comment11.text=\n\ Returns\ if\ second\ family\ member\ input\ is\ the\ spouse\ of\ \n\ first\ family\ member\ input,\ returns\ false\ if\ person\ has\ no\ spouse\n\ \n\ param\ FamilyMember\ current,\ FamilyMember\ spouse\n\ return\ true\ if\ spouse\ is\ the\ spouse\ of\ the\ current,\ false\ if\ person\ has\ no\ spouse\n
comment12.params=current\ sibling
comment12.target=boolean\ isSibling(FamilyMember,\ FamilyMember)
comment12.text=\n\ Returns\ true\ if\ second\ family\ member\ input\ is\ the\ sibling\ of\ \n\ first\ family\ member\ input\n\ \n\ param\ FamilyMember\ current,\ FamilyMember\ sibling\n\ return\ true\ if\ sibling\ is\ the\ sibling\ of\ the\ current\n
comment13.params=person
comment13.target=java.util.LinkedList\ getChildren(FamilyMember)
comment13.text=\n\ get\ the\ children\ of\ a\ family\ member\n\ \n\ param\ FamilyMember\ person\n\ return\ LinkedList<FamilyMember>\ children\n
comment14.params=member
comment14.target=boolean\ isMaternal(FamilyMember)
comment14.text=\n\ return\ true\ if\ the\ family\ member\ is\ from\ the\ mother\ side\n\ \n\ param\ FamilyMember\ member\n\ return\ true\ if\ the\ family\ member\ is\ from\ the\ mother\ side\n
comment15.params=older\ younger
comment15.target=int\ getGeneration(FamilyMember,\ FamilyMember)
comment15.text=\n\ get\ the\ generation\ gap\ between\ two\ family\ member\n\ \n\ param\ FamilyMember\ older,\ FamilyMember\ younger\n\ return\ int\ the\ generation\ gap\n
comment16.params=
comment16.target=AdjListsWeightedGraph\ getFamilyTree()
comment16.text=\n\ Getter.\ get\ instance\ variable\ familyTree\n\ \n\ param\ no\n\ return\ AdjListsWeightedGraph<FamilyMember>\ familyTree\n
comment17.params=person
comment17.target=boolean\ isFemale(FamilyMember)
comment17.text=\n\ return\ true\ if\ the\ family\ member\ is\ female\n\ \n\ param\ FamilyMember\ person\n\ return\ true\ if\ the\ family\ member\ is\ female\n
comment18.params=person
comment18.target=java.lang.String\ getTitle(FamilyMember)
comment18.text=\n\ get\ the\ title\ of\ a\ family\ member\ with\ respect\ to\ user\n\ \n\ param\ FamilyMember\ person\n\ return\ String\ the\ title\n
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\n\ return\ a\ string\ representation\ of\ the\ Family\ class\n\ \n\ param\ no\n\ return\ String\ the\ string\ representation\n
comment2.params=user
comment2.target=Family(FamilyMember)
comment2.text=\n\ Family\ class\ constructor\n\ Takes\ a\ FamilyMember\ as\ input\ (represented\ as\ the\ first\ created\ person\n\ in\ the\ program)\ and\ sets\ them\ as\ the\ user\n
comment20.params=
comment20.target=java.lang.String[]\ getMembersArray()
comment20.text=\n\ Returns\ an\ array\ of\ names\ of\ all\ family\ members.\n\ \n\ param\ no\n\ return\ array\ of\ names\n
comment21.params=
comment21.target=java.util.LinkedList\ getMembersLinkedList()
comment21.text=\n\ Returns\ a\ LinkedList\ of\ all\ family\ members.\n\ @return\ LinkedList\ of\ all\ family\ members\n
comment22.params=name
comment22.target=FamilyMember\ getMember(java.lang.String)
comment22.text=\n\ Takes\ a\ String\ of\ name\ and\ returns\ the\ corresponding\ FamilyMember\ object.\n\ @param\ String\ name\n\ @return\ FamilyMember\n
comment23.params=args
comment23.target=void\ main(java.lang.String[])
comment3.params=user
comment3.target=void\ setUser(FamilyMember)
comment3.text=\n\ set\ the\ user\ as\ family\ imput\n\ \n\ param\ FamilyMember\ user\n\ return\ void\n
comment4.params=
comment4.target=FamilyMember\ getUser()
comment4.text=\n\ get\ the\ user\ \n\ \n\ param\ no\n\ return\ FamilyMember\ user\n
comment5.params=child\ parent
comment5.target=void\ addParent(FamilyMember,\ FamilyMember)
comment5.text=\n\ Adding\ a\ parent\ to\ the\ graph.\n\ Assumes\ (a)\ people\ have\ the\ same\ parents\ as\ their\ siblings\ and\ \n\ (b)\ people\ with\ the\ same\ child\ are\ spouses,\ setting\ a\ relationship\ between\ them\ as\ well\n\ \n\ param\ FamilyMember\ child,\ FamilyMember\ parent\n\ return\ void\n
comment6.params=current\ spouse
comment6.target=void\ addSpouse(FamilyMember,\ FamilyMember)
comment6.text=\n\ Adding\ a\ spouse\ to\ the\ graph.\n\ Assumes\ spouses\ share\ the\ same\ children\n\ \n\ param\ FamilyMember\ current,\ FamilyMember\ spouse\n\ return\ void\n
comment7.params=current\ sibling
comment7.target=void\ addSibling(FamilyMember,\ FamilyMember)
comment7.text=\n\ Adding\ a\ sibling\ to\ the\ graph.\n\ Assumes\ siblings\ have\ same\ parents\ and\ siblings\ and\ sets\ a\ relationship\ between\n\ them\ as\ well\n\ \n\ param\ FamilyMember\ current,\ FamilyMember\ sibling\n\ return\ void\n
comment8.params=parent\ child
comment8.target=void\ addChild(FamilyMember,\ FamilyMember)
comment8.text=\n\ Adding\ a\ child\ to\ graph.\n\ Assumes\ spouse\ is\ parent\ to\ children\ as\ well\ and\ all\ children\ are\ \n\ siblings\n\ \n\ param\ FamilyMember\ parent,\ FamilyMember\ child\n\ return\ void\n
comment9.params=current\ mom
comment9.target=boolean\ isMother(FamilyMember,\ FamilyMember)
comment9.text=\n\ Returns\ true\ if\ second\ family\ member\ input\ is\ the\ mother\ of\ \n\ first\ family\ member\ input\n\ \n\ param\ FamilyMember\ current,\ FamilyMember\ mom\n\ return\ true\ if\ mom\ is\ the\ mother\ of\ current\n
numComments=24
